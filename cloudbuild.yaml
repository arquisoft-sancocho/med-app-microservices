steps:
  # Construir la imagen de Docker
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'us-central1-docker.pkg.dev/${PROJECT_ID}/docker-repo/${_SERVICE_NAME}:latest', '.']

  # Enviar la imagen a Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'us-central1-docker.pkg.dev/${PROJECT_ID}/docker-repo/${_SERVICE_NAME}:latest']

  # Desplegar en Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - '${_SERVICE_NAME}'
      - '--image=us-central1-docker.pkg.dev/${PROJECT_ID}/docker-repo/${_SERVICE_NAME}:latest'
      - '--region=${_REGION}'
      - '--platform=managed'
      - '--allow-unauthenticated'
      - '--add-cloudsql-instances=${PROJECT_ID}:${_REGION}:django-db-instance'
      - '--set-env-vars=DJANGO_SETTINGS_MODULE=medical_system.settings_prod'

  # Ejecutar el script para actualizar contenedores en VMs (o lo que necesites)
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "Ejecutando script de actualizaci√≥n en VMs..."
        bash scripts/update_gce_containers.sh

substitutions:
  _SERVICE_NAME: app-medica
  _REGION: us-central1

options:
  logging: CLOUD_LOGGING_ONLY
